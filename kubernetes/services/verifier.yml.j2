apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: verifier
spec:
  selector:
    matchLabels:
      run: verifier
  serviceName: "verifier"
  replicas: {{ replicas_count.verifier }}
  template:
    metadata:
      labels:
        run: verifier
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name:             verifier
          image:            {{ docker_registry }}/{{image_prefix }}verifier:{{ image_version }}
          imagePullPolicy:  Always
          command:          ["/usr/local/bin/run-celery.sh", "--loglevel", "info", "--queues", "verifier"]
          resources:
            requests:
              memory: "{{ resource_limits.worker_apps.verifier.memory.requests }}"
              cpu:    "{{ resource_limits.worker_apps.verifier.cpu.requests }}"
            limits:
              memory: "{{ resource_limits.worker_apps.verifier.memory.limits }}"
              cpu:    "{{ resource_limits.worker_apps.verifier.cpu.limits }}"
          volumeMounts:
            - name:      concent-api-secrets
              mountPath: /srv/http/concent_api/concent_api/settings/secrets/
              readOnly:  true
            - name:      verifier-settings
              mountPath: /srv/http/concent_api/concent_api/settings/config_map/
              readOnly:  true
            - name: verifier-storage
              mountPath: /srv/storage/
      volumes:
        - name: concent-api-secrets
          secret:
            secretName: concent-api-secrets
        - name: concent-api-settings
          configMap:
            name: concent-api-settings
        - name: verifier-settings
          configMap:
            name: verifier-settings
  volumeClaimTemplates:
  - metadata:
      name: verifier-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 30Gi
---
apiVersion: v1
kind:       Service
metadata:
  name: verifier
  labels:
    run: verifier
spec:
  type: ClusterIP
  ports:
    - port:       80
  selector:
    run: verifier
