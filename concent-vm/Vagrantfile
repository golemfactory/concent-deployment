Vagrant.configure("2") do |config|

    unless Vagrant.has_plugin?("vagrant-vbguest")
        puts "Vagrant plugin `vagrant-vbguest` is not installed. Please follow the instructions from concent-deployment README."
        abort
    end

    config.vm.box      = "debian/stretch64"
    config.vm.hostname = "concent-development-vm"
    config.vm.synced_folder(".", "/vagrant", disabled: true)


    config.vm.network "private_network", ip: "172.40.2.3"

    blockchain_disk = './disk/blockchain_disk.vdi'
    config.vm.provider "virtualbox" do |virtualbox|
        virtualbox.memory = 2048
        virtualbox.gui    = false
        if not File.exists?(blockchain_disk)
            virtualbox.customize [
                'createhd',
                '--filename', blockchain_disk,
                '--variant',  'Fixed',
                '--size',     30 * 1024, # MB
            ]
        end
        virtualbox.customize [
            'storageattach',
            :id,
            '--storagectl',   'SATA Controller',
            '--port',         1,
            '--device',       0,
            '--type',         'hdd',
            '--medium',       blockchain_disk,
            '--hotpluggable', 'on'
        ]
    end

    if not File.exists?(blockchain_disk)
        config.vm.provision "shell", privileged: true, inline: <<-SHELL
            mkfs.ext4 /dev/sdb
        SHELL
    end

    config.vm.provision "shell", run: "always", privileged: true, inline: <<-SHELL
        directory=/home/vagrant/blockchain
        if [ ! -d "$directory" ]; then
            mkdir $directory || exit 1
        fi
        mountpoint --quiet $directory || mount /dev/sdb $directory
    SHELL

    def detach_virtual_disk(trigger, blockchain_disk)
        trigger.info = "Detaching (but not removing) virtual disk #{blockchain_disk}."
        machineId = File.read(".vagrant/machines/default/virtualbox/id")
        trigger.run = {
            inline: "VBoxManage storageattach '#{machineId}' " +
                    "--storagectl 'SATA Controller' "          +
                    "--port       1 "                          +
                    "--device     0 "                          +
                    "--type       hdd "                        +
                    "--medium     none"
        }
    end

    config.trigger.after :halt do |trigger|
        detach_virtual_disk(trigger, blockchain_disk)
    end

    config.trigger.before :destroy do |trigger|
        # `vagrant destroy` normally destroys any virtual disks attached to the machine.
        # Our disk contains Ethereum blockchain which can take a lot of time to redownload so we detach it to prevent its destruction.
        detach_virtual_disk(trigger, blockchain_disk)
    end

    config.vm.provision "ansible", run: "always" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook           = "configure.yml"
        ansible.extra_vars         = {
            concent_deployment_version: ENV['CONCENT_DEPLOYMENT_VERSION'] || "master",
        }
        ansible.inventory_path     = "./inventory"
        ansible.limit              = "all"
    end

end
