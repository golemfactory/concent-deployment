resolver kube-dns.kube-system.svc.cluster.local;

map $http_accept $extension {
    default html;
    application/json json;
}

{% if not nginx_proxy_allow_http %}
# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name    {{ concent_versions[concent_version].cluster_address }};
    return 302     https://$server_name$request_uri;

}
{% endif %}
{% if concent_versions[concent_version].load_balancer_turned_on %}
upstream {{ current_golem_messages_version }} {
     server nginx-proxy.default.svc.cluster.local;
}

upstream {{ previous_golem_messages_version }} {
     server {{ concent_versions[previous_concent_version].cluster_address }}:443;
}

# Map to different upstream backends based on the `X-Golem-Messages` http header
map $http_x_golem_messages $version {
     ""          "http://{{ current_golem_messages_version }}";
     "~^{{ current_golem_messages_version }}.*$"   "http://{{ current_golem_messages_version }}";
     "~^{{ previous_golem_messages_version }}.*$"  "https://{{ previous_golem_messages_version }}";
     default    "not_supported";
     # Check semi version 2.0 format
     ~^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$ "not_found";
}

map $http_x_golem_messages $host_param {
     ""                                            internal.local;
     "~^{{ current_golem_messages_version }}.*$"   internal.local;
     "~^{{ previous_golem_messages_version }}.*$"  $http_host;
     default    $http_host;
}

server {
    {% if nginx_proxy_allow_http %}
    # HTTP
    listen 80;
    server_name {{ concent_versions[concent_version].cluster_address }};
    {% endif %}
    # HTTPS
    listen 443      ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/plain text/css text/javascript application/xml;
    include         snippets/error-pages.conf;

    location / {
        if ( $version = 'not_supported' ) {
            return 400;
        }
        if ( $version = 'not_found' ) {
            return 404;
        }
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header Host              $host_param;
        proxy_pass                         $version$request_uri;
        client_max_body_size               {{ max_upload_size }};
    }

}

{% endif %}

{% if not concent_versions[concent_version].load_balancer_turned_on %}
server {
    {% if nginx_proxy_allow_http %}
    # HTTP
    listen 80       default_server;
    {% endif %}
    # HTTPS
    listen 443      ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

{% else %}

server {

    listen      80;
    server_name internal.local;

{% endif %}
    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/plain text/css text/javascript application/xml;
    include         snippets/error-pages.conf;

    location / {
        root    /srv/http/nginx-proxy;
        index   index.html index.htm;
    }

    location /api-docs/ {
        alias /srv/http/concent-api-docs/html/;
    }

    location /static/ {
        alias /srv/http/concent-api-assets/static-root/;
    }

    location ~ ^/(api|admin)/ {
        set $concent_api_backend http://concent-api.default.svc.cluster.local;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header Host              $http_host;
        proxy_pass                         $concent_api_backend;
    }

    location ~ ^/(download|upload)/ {
        {% if nginx_storage_allow_http %}
        set $nginx_storage_backend http://nginx-storage.default.svc.cluster.local;
        {% else %}
        set $nginx_storage_backend https://nginx-storage.default.svc.cluster.local;
        {% endif %}
        client_max_body_size               {{ max_upload_size }};
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header Host              $http_host;
        proxy_pass                         $nginx_storage_backend;
    }
}
