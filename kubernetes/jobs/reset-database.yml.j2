apiVersion: batch/v1
kind: Job
metadata:
  name: reset-{{ selected_database_id }}-database
spec:
  template:
    metadata:
      name: reset-{{ selected_database_id }}-database
    spec:
      restartPolicy: Never
      containers:
        - name:            job-ok
          image:           busybox
          imagePullPolicy: Always
          command:         ["sh", "-c", "echo Done."]
          resources:
            requests:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.requests') | default(resource_limits.others.reset_db.memory.requests, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.requests') | default(resource_limits.others.reset_db.cpu.requests, true) }}"
            limits:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.limits') | default(resource_limits.others.reset_db.memory.limits, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.limits') | default(resource_limits.others.reset_db.cpu.limits , true) }}"
      volumes:
        - name: {{ selected_database_id }}-db-secrets
          secret:
            secretName:  {{ selected_database_id }}-db-secrets
            defaultMode: 0600
        {% if initialize_django_admin %}
        - name: django-admin-fixture
          secret:
            secretName: django-admin-fixture
        {% endif %}
        - name: concent-api-secrets
          secret:
            secretName: concent-api-secrets
        - name: database-job-settings
          configMap:
            name: database-job-settings
      initContainers:
        - name:             reset-{{ selected_database_id }}-database
          image:            {{ docker_registry }}/{{ image_prefix }}postgresql:{{ image_version }}
          imagePullPolicy:  Always
          command:          ["/usr/local/bin/reset-database.sh", "{{ database_host }}", "{{ database_name }}", "{{ database_user }}"]
          resources:
            requests:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.requests') | default(resource_limits.others.reset_db.memory.requests, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.requests') | default(resource_limits.others.reset_db.cpu.requests, true) }}"
            limits:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.limits') | default(resource_limits.others.reset_db.memory.limits, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.limits') | default(resource_limits.others.reset_db.cpu.limits, true) }}"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ selected_database_id }}-db-secrets
                  key:  db_user_password
        - name:             migrate-database
          image:            {{ docker_registry }}/{{ image_prefix }}concent-api:{{ image_version }}
          imagePullPolicy:  Always
          command:          ["/usr/local/bin/concent-api-manage.sh", "migrate", "--database={{ selected_database_id }}"]
          resources:
            requests:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.requests') | default(resource_limits.others.reset_db.memory.requests, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.requests') | default(resource_limits.others.reset_db.cpu.requests, true) }}"
            limits:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.limits') | default(resource_limits.others.reset_db.memory.limits, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.limits') | default(resource_limits.others.reset_db.cpu.limits, true) }}"
          volumeMounts:
            - name:       concent-api-secrets
              mountPath:  /srv/http/concent_api/concent_api/settings/secrets/
              readOnly:   true
            - name:       database-job-settings
              mountPath:  /srv/http/concent_api/concent_api/settings/config_map/
              readOnly:   true
        {% if initialize_django_admin %}
        - name:             create-django-admin
          image:            {{ docker_registry }}/{{ image_prefix }}concent-api:{{ image_version }}
          imagePullPolicy:  Always
          command:          ["/usr/local/bin/concent-api-manage.sh", "loaddata", "/srv/http/fixtures/django-admin-fixture.yaml", "--database={{ selected_database_id }}"]
          resources:
            requests:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.requests') | default(resource_limits.others.reset_db.memory.requests, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.requests') | default(resource_limits.others.reset_db.cpu.requests, true) }}"
            limits:
              memory: "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.memory.limits') | default(resource_limits.others.reset_db.memory.limits, true) }}"
              cpu:    "{{ concent_versions[concent_version] | chained_get('resource_limits.others.reset_db.cpu.limits') | default(resource_limits.others.reset_db.cpu.limits, true) }}"
          volumeMounts:
            - name:       django-admin-fixture
              mountPath:  /srv/http/fixtures/
              readOnly:   true
            - name:       concent-api-secrets
              mountPath:  /srv/http/concent_api/concent_api/settings/secrets/
              readOnly:   true
            - name:       database-job-settings
              mountPath:  /srv/http/concent_api/concent_api/settings/config_map/
              readOnly:   true
        {% endif %}
