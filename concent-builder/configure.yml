- hosts:
    - concent-builder
  vars_files:
    - consts.yml
    - ../containers/versions.yml
    # NOTE: This playbook should not use values from concent-deployment-values
  tasks:
    - become:      yes
      become_user: root
      block:
        - name:    Install required packages for apt_key and apt_repository
          apt:  name={{ item }}
          with_items:
            - apt-transport-https
            - ca-certificates
            - curl

        - name:    Use pinning to ensure that packages from testing are installed only of stable packages are not available
          copy:
            src:  files/testing.pref
            dest: /etc/apt/preferences.d/testing.pref

        - name:    Enable the testing repository
          apt_repository:
            repo:  "deb http://ftp.de.debian.org/debian testing main"
            state: present

        - name:    Add Google SDK repository key
          apt_key:
            url:   https://packages.cloud.google.com/apt/doc/apt-key.gpg
            state: present

        - name:    Add Google Cloud SDK repository
          apt_repository:
            repo:  "deb http://packages.cloud.google.com/apt cloud-sdk-{{ ansible_distribution_release }} main"
            state: present

        - name:    Add Docker repository key
          apt_key:
            url:   https://apt.dockerproject.org/gpg
            state: present

        - name:    Add Docker.io apt repository
          apt_repository:
            repo:  "deb https://apt.dockerproject.org/repo {{ ansible_distribution|lower }}-{{ ansible_distribution_release }} main"
            state: present

        - name:    Install system updates for Debian
          apt:  update_cache=yes

        - name:    Install basic packages
          apt:     name={{ item }}
          with_items:
            - ncdu
            - tree
            - htop
            - tmux

        - name:    Install dependencies
          apt:     name={{ item }}
          with_items:
            - build-essential
            - libssl-dev
            - pkg-config
            - libsecp256k1-dev
            - git
            - kubectl={{ kubectl_version }}
            - docker-engine={{ docker_version }}
            - google-cloud-sdk={{ google_cloud_sdk_version }}
            - libpq-dev
            - gcc
            - python3-yaml
            - postgresql-{{ postgres_version }}
            - python3-psycopg2

        - name:    Install dependencies from testing
          apt:  name={{ item }} default_release=testing
          with_items:
            - python{{ python_version }}
            - python3-pip
            - python{{ python_version }}-dev
            # This package is need to upgrade after install python3.6
            # that requires a newer version of python3-apt.
            # The ansible `apt` module use this package.
            - python3-apt
            - virtualenv

        - name:     apt autoclean
          command:  apt autoclean

        - name:     apt autoremove
          command:  apt autoremove --assume-yes

        - name:    Install yasha in global python environment using pip
          pip:
            executable: pip3
            name:       "{{ item }}"
          with_items:
            - yasha
            - ansible

        - name:    Create user that will be used for building stuff
          user:
            name:   "{{ shared_user }}"
            state:  present
            groups: docker

        - name:    Create data_dir
          file:
            path:  "{{ data_dir }}"
            state: directory
            owner: "{{ shared_user }}"
            group: "{{ shared_user }}"

        - name: Upload configuration for kubectl
          copy:
            src:   "{{ local_secret_dir }}/cloud/config"
            dest:  "/home/{{ shared_user }}/.kube/config"
            owner: "{{ shared_user }}"
            group: "{{ shared_user }}"
