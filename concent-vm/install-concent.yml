- hosts:
    - concent-vm
  vars_files:
    - ../containers/versions.yml
    - ../concent-builder/repositories.yml
    - consts.yml
  tasks:
    - become:      yes
      become_user: vagrant
      block:
        - name:   Clone concent repository
          git:
            repo:    "{{ repositories.concent.url }}"
            dest:    "{{ concent_dir }}"
            version: "{{ concent_version }}"
            clone:   yes
            update:  yes

        - name:   Create RELEASE-VERSION files
          shell: echo -n $(git describe --always) > "{{ item }}/RELEASE-VERSION"
          args:
            chdir: "{{ item }}"
          with_items:
            - "{{ concent_dir }}"
            - "{{ concent_dir }}/middleman_protocol"

        - name:   Create virtualenv for concent
          command:  virtualenv ~/virtualenv --python "python{{ python_version }}" creates="~/virtualenv"

        - name:   Install requirements for concent
          pip:
            chdir:              "{{ concent_dir }}/concent_api/"
            requirements:       "{{ item }}"
            virtualenv:         ~/virtualenv
            virtualenv_python:  "python{{ python_version }}"
          with_items:
            - requirements.lock
            - ../requirements-development.txt

        - name:    Install middleman and signing-service
          command: "../../virtualenv/bin/python{{ python_version }} setup.py develop"
          args:
            chdir:   "{{ concent_dir }}/{{ item }}"
          with_items:
            - middleman_protocol
            - signing_service

    - name:         Looking for extra_settings.py on the host
      local_action: stat path="{{ playbook_dir }}/extra_settings.py"
      register:     extra_settings

    - fail: msg="This playbook expects to find a file called extra_settings.py in its directory.
          The file is a Python script that is imported into the automatically generated local_settings.py.
          Please create it and rerun this playbook."
      when: not extra_settings.stat.exists

    - name:         Looking for signing-service-env.sh on the host
      local_action: stat path="{{ playbook_dir }}/signing-service-env.sh"
      register:     signing_service_env

    - fail: msg="This playbook expects to find a file called signing-service-env.sh in its directory.
          The file is a Bash script that is sourced before starting Concent's Signing Service and can define environment variables for it.
          Please create it and rerun this playbook."
      when: not signing_service_env.stat.exists

    - become:      yes
      become_user: vagrant
      block:
        - name:   Install local_settings.py in the machine
          copy:
            src:    local_settings.py
            dest:   "{{ concent_dir }}/concent_api/concent_api/settings/"
            mode:   0644

        - name:   Upload user-provided extra_settings.py to the machine
          copy:
            src:    extra_settings.py
            dest:   "{{ concent_dir }}/concent_api/concent_api/settings/"
            mode:   0644

        - name:   Upload signing-service-env.sh to the virtual machine
          copy:
            src:    "{{ playbook_dir }}/signing-service-env.sh"
            dest:   "~/"
            mode:   0555

        - name:   Create verifier_storage directory
          file:
            path:  "{{ concent_dir }}/concent_api/verifier_storage"
            state: directory

        - name:   Migrate databases
          django_manage:
              command:    "migrate --database {{ item }}"
              app_path:   "{{ concent_dir }}/concent_api"
              virtualenv: "~/virtualenv"
          with_items:
            - control
            - storage

        - name:   Check if superuser already exist
          shell: echo "from django.contrib.auth import get_user_model; User = get_user_model(); print(User.objects.filter(username='admin').count()>0)" | ~/virtualenv/bin/python ./manage.py shell
          args:
            chdir: "{{ concent_dir }}/concent_api"
          register: superuser_exists

        - name: Create django superuser
          shell: echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'password')" | ~/virtualenv/bin/python ./manage.py shell
          args:
            chdir: "{{ concent_dir }}/concent_api"
          when: superuser_exists.stdout == 'False'

        - name:   Run manage.py check
          django_manage:
            command:      "check"
            app_path:     "{{ concent_dir }}/concent_api"
            virtualenv:   "~/virtualenv"
